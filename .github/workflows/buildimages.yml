name: Create and Push images

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Environment variables available to all jobs and steps in this workflow
env:
  CLUSTER_NAME: ts-aks
  CLUSTER_RESOURCE_GROUP: twitchsoft
  DOCKER_REGISTRY: 'twitchsoft.azurecr.io'

jobs:
  build-maitenance:
    name: Maintenance service build
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Azure Container Registry login
    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build & Push image to ACR
    - name: Build image
      run: |
        docker build -f TwitchSoft/TwitchSoft.Maintenance/Dockerfile -t ${{ env.DOCKER_REGISTRY }}/twitchsoftmaintenance:latest TwitchSoft
    - name: Push image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/twitchsoftmaintenance:latest
    
    # Install helm
    - name: Helm tool installer
      uses: Azure/setup-helm@v1
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    # Upgrade chart
    - name: Helm Upgrade
      run: |
        helm upgrade ts-maintenance ./TwitchSoft/TwitchSoft.Maintenance/charts/twitchsoftmaintenance/
  build-servicebusprocessor:
    name: ServiceBusProcessor service build
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Azure Container Registry login
    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build & Push image to ACR
    - name: Build image
      run: |
        docker build -f TwitchSoft/TwitchSoft.ServiceBusProcessor/Dockerfile -t ${{ env.DOCKER_REGISTRY }}/twitchsoftservicebusprocessor:latest TwitchSoft
    - name: Push image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/twitchsoftservicebusprocessor:latest

    # Install helm
    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    # Upgrade chart
    - name: Helm Upgrade
      run: |
        helm upgrade ts-servicebusprocessor ./TwitchSoft/TwitchSoft.ServiceBusProcessor/charts/twitchsoftservicebusprocessor/
  build-twitchbot:
    name: TwitchBot service build
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Azure Container Registry login
    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build & Push image to ACR
    - name: Build image
      run: |
        docker build -f TwitchSoft/TwitchSoft.TwitchBot/Dockerfile -t ${{ env.DOCKER_REGISTRY }}/twitchsofttwitchbot:latest TwitchSoft
    - name: Push image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/twitchsofttwitchbot:latest

    # Install helm
    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    # Upgrade chart
    - name: Helm Upgrade
      run: |
        helm upgrade ts-twitchbot ./TwitchSoft/TwitchSoft.TwitchBot/charts/twitchsofttwitchbot/
  build-telegrambot:
    name: TelegramBot service build
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Azure Container Registry login
    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build & Push image to ACR
    - name: Build image
      run: |
        docker build -f TwitchSoft/TwitchSoft.TelegramBot/Dockerfile -t ${{ env.DOCKER_REGISTRY }}/twitchsofttelegrambot:latest TwitchSoft
    - name: Push image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/twitchsofttelegrambot:latest

    # Install helm
    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    # Upgrade chart
    - name: Helm Upgrade
      run: |
        helm upgrade ts-telegrambot ./TwitchSoft/TwitchSoft.TelegramBot/charts/twitchsofttelegrambot/
  build-twitchbotorchestrator:
    name: TwitchBotOrchestrator service build
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Azure Container Registry login
    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Build & Push image to ACR
    - name: Build image
      run: |
        docker build -f TwitchSoft/TwitchSoft.TwitchBotOrchestrator/Dockerfile -t ${{ env.DOCKER_REGISTRY }}/twitchsofttwitchbotorchestrator:latest TwitchSoft
    - name: Push image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/twitchsofttwitchbotorchestrator:latest

    # Install helm
    - name: Helm tool installer
      uses: Azure/setup-helm@v1

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

    # Upgrade chart
    - name: Helm Upgrade
      run: |
        helm upgrade ts-twitchbotorchestrator ./TwitchSoft/TwitchSoft.TwitchBotOrchestrator/charts/twitchsofttwitchbotorchestrator/
        
